// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`generate warnings 1`] = `
Array [
  Object {
    "level": "warn",
    "location": "tests/warning-routes.ts:3:6",
    "message": "Status code is not a number literal: number",
  },
]
`;

exports[`generate works 1`] = `
Object {
  "components": Object {
    "schemas": Object {
      "DirectRecursiveIntersection": Object {
        "properties": Object {
          "children": Object {
            "$ref": "#/components/schemas/DirectRecursiveIntersection",
          },
          "id": Object {
            "type": "string",
          },
        },
        "required": Array [
          "id",
          "children",
        ],
        "type": "object",
      },
      "DirectRecursiveType": Object {
        "properties": Object {
          "children": Object {
            "items": Object {
              "$ref": "#/components/schemas/DirectRecursiveType",
            },
            "type": "array",
          },
          "id": Object {
            "type": "string",
          },
        },
        "required": Array [
          "id",
          "children",
        ],
        "type": "object",
      },
      "DocumentedInterface": Object {
        "properties": Object {
          "outputField": Object {
            "description": "Output field description here",
            "type": "string",
          },
        },
        "required": Array [
          "outputField",
        ],
        "type": "object",
      },
      "IndirectRecursiveType": Object {
        "properties": Object {
          "hello": Object {
            "type": "string",
          },
          "items": Object {
            "items": Object {
              "$ref": "#/components/schemas/MutuallyRecursive",
            },
            "type": "array",
          },
        },
        "required": Array [
          "hello",
          "items",
        ],
        "type": "object",
      },
      "MutuallyRecursive": Object {
        "properties": Object {
          "other": Object {
            "$ref": "#/components/schemas/IndirectRecursiveType",
          },
        },
        "required": Array [
          "other",
        ],
        "type": "object",
      },
      "User": Object {
        "properties": Object {
          "petName": Object {
            "nullable": true,
            "type": "string",
          },
          "shoeSize": Object {
            "type": "number",
          },
          "updated": Object {
            "format": "date-time",
            "type": "string",
          },
        },
        "required": Array [
          "shoeSize",
          "petName",
          "updated",
        ],
        "type": "object",
      },
      "User2": Object {
        "properties": Object {
          "name": Object {
            "type": "string",
          },
        },
        "required": Array [
          "name",
        ],
        "type": "object",
      },
    },
  },
  "paths": Object {
    "/binary-response": Object {
      "get": Object {
        "responses": Object {
          "200": Object {
            "content": Object {
              "application/octet-stream": Object {
                "schema": Object {
                  "format": "binary",
                  "type": "string",
                },
              },
            },
            "description": "OK",
          },
        },
      },
    },
    "/branded-request-body": Object {
      "post": Object {
        "requestBody": Object {
          "content": Object {
            "application/json": Object {
              "schema": Object {
                "properties": Object {
                  "int": Object {
                    "type": "integer",
                  },
                  "nonEmptyString": Object {
                    "type": "string",
                  },
                },
                "required": Array [
                  "int",
                  "nonEmptyString",
                ],
                "type": "object",
              },
            },
          },
        },
        "responses": Object {
          "200": Object {
            "content": Object {
              "text/plain": Object {
                "schema": Object {
                  "type": "number",
                },
              },
            },
            "description": "OK",
          },
          "400": Object {
            "content": Object {
              "text/plain": Object {
                "schema": Object {
                  "type": "string",
                },
              },
            },
            "description": "Bad Request",
          },
        },
      },
    },
    "/constant": Object {
      "get": Object {
        "description": "No input, static output, has a tag",
        "responses": Object {
          "200": Object {
            "content": Object {
              "text/plain": Object {
                "schema": Object {
                  "type": "string",
                },
              },
            },
            "description": "Successful result",
          },
        },
        "summary": "This is a summary",
        "tags": Array [
          "Tag",
        ],
      },
    },
    "/cookies": Object {
      "get": Object {
        "parameters": Array [
          Object {
            "in": "cookie",
            "name": "foo",
            "required": true,
            "schema": Object {
              "type": "string",
            },
          },
          Object {
            "in": "cookie",
            "name": "bar",
            "required": false,
            "schema": Object {
              "type": "string",
            },
          },
        ],
        "responses": Object {
          "200": Object {
            "content": Object {
              "application/json": Object {
                "schema": Object {
                  "properties": Object {
                    "bar": Object {
                      "type": "number",
                    },
                    "foo": Object {
                      "type": "string",
                    },
                  },
                  "required": Array [
                    "foo",
                  ],
                  "type": "object",
                },
              },
            },
            "description": "OK",
          },
          "400": Object {
            "content": Object {
              "text/plain": Object {
                "schema": Object {
                  "type": "string",
                },
              },
            },
            "description": "Bad Request",
          },
        },
      },
    },
    "/custom-content-type": Object {
      "get": Object {
        "responses": Object {
          "200": Object {
            "content": Object {
              "text/csv": Object {
                "schema": Object {
                  "type": "string",
                },
              },
            },
            "description": "OK",
            "headers": Object {
              "Content-Type": Object {
                "required": true,
                "schema": Object {
                  "type": "string",
                },
              },
            },
          },
        },
      },
    },
    "/direct-route-call": Object {
      "get": Object {
        "responses": Object {
          "200": Object {
            "content": Object {
              "text/plain": Object {
                "schema": Object {
                  "type": "string",
                },
              },
            },
            "description": "OK",
          },
        },
      },
    },
    "/handler-not-inline": Object {
      "post": Object {
        "requestBody": Object {
          "content": Object {
            "application/json": Object {
              "schema": Object {
                "properties": Object {
                  "foo": Object {
                    "type": "string",
                  },
                },
                "required": Array [
                  "foo",
                ],
                "type": "object",
              },
            },
          },
        },
        "responses": Object {
          "200": Object {
            "content": Object {
              "text/plain": Object {
                "schema": Object {
                  "type": "string",
                },
              },
            },
            "description": "OK",
          },
          "400": Object {
            "content": Object {
              "text/plain": Object {
                "schema": Object {
                  "type": "string",
                },
              },
            },
            "description": "Bad Request",
          },
        },
      },
    },
    "/interface-array-response": Object {
      "get": Object {
        "responses": Object {
          "200": Object {
            "content": Object {
              "application/json": Object {
                "schema": Object {
                  "items": Object {
                    "$ref": "#/components/schemas/User",
                  },
                  "type": "array",
                },
              },
            },
            "description": "OK",
          },
        },
      },
    },
    "/interface-response": Object {
      "get": Object {
        "responses": Object {
          "200": Object {
            "content": Object {
              "application/json": Object {
                "schema": Object {
                  "$ref": "#/components/schemas/User",
                },
              },
            },
            "description": "OK",
          },
        },
      },
    },
    "/no-explicit-route-type": Object {
      "get": Object {
        "responses": Object {
          "200": Object {
            "content": Object {
              "text/plain": Object {
                "schema": Object {
                  "type": "string",
                },
              },
            },
            "description": "OK",
          },
        },
      },
    },
    "/other-file-default-export": Object {
      "get": Object {
        "responses": Object {
          "200": Object {
            "content": Object {
              "text/plain": Object {
                "schema": Object {
                  "type": "string",
                },
              },
            },
            "description": "OK",
          },
        },
      },
    },
    "/other-file-export": Object {
      "get": Object {
        "responses": Object {
          "200": Object {
            "content": Object {
              "application/json": Object {
                "schema": Object {
                  "$ref": "#/components/schemas/User2",
                },
              },
            },
            "description": "OK",
          },
        },
      },
    },
    "/other-stuff/other-route": Object {
      "get": Object {
        "responses": Object {
          "200": Object {
            "content": Object {
              "text/plain": Object {
                "schema": Object {
                  "type": "string",
                },
              },
            },
            "description": "OK",
          },
        },
      },
    },
    "/query": Object {
      "get": Object {
        "parameters": Array [
          Object {
            "in": "query",
            "name": "str",
            "required": true,
            "schema": Object {
              "type": "string",
            },
          },
          Object {
            "in": "query",
            "name": "num",
            "required": false,
            "schema": Object {
              "type": "string",
            },
          },
        ],
        "responses": Object {
          "200": Object {
            "content": Object {
              "text/plain": Object {
                "schema": Object {
                  "type": "string",
                },
              },
            },
            "description": "OK",
          },
          "400": Object {
            "content": Object {
              "text/plain": Object {
                "schema": Object {
                  "type": "string",
                },
              },
            },
            "description": "Bad Request",
          },
        },
      },
    },
    "/recursive-types": Object {
      "get": Object {
        "responses": Object {
          "200": Object {
            "content": Object {
              "application/json": Object {
                "schema": Object {
                  "$ref": "#/components/schemas/IndirectRecursiveType",
                },
              },
            },
            "description": "OK",
          },
        },
      },
    },
    "/request-body": Object {
      "post": Object {
        "description": "This one has request body and two possible successful responses and multiple tags",
        "requestBody": Object {
          "content": Object {
            "application/json": Object {
              "schema": Object {
                "properties": Object {
                  "date": Object {
                    "format": "date-time",
                    "type": "string",
                  },
                  "nullableNum": Object {
                    "nullable": true,
                    "type": "number",
                  },
                  "nullableObj": Object {
                    "nullable": true,
                    "properties": Object {
                      "foo": Object {
                        "type": "number",
                      },
                    },
                    "required": Array [
                      "foo",
                    ],
                    "type": "object",
                  },
                  "numLit": Object {
                    "enum": Array [
                      42,
                    ],
                    "type": "number",
                  },
                  "numLits": Object {
                    "enum": Array [
                      42,
                      123,
                    ],
                    "type": "number",
                  },
                  "optionalBool": Object {
                    "type": "boolean",
                  },
                  "requiredBool": Object {
                    "type": "boolean",
                  },
                  "str": Object {
                    "type": "string",
                  },
                  "strLit": Object {
                    "enum": Array [
                      "foo",
                    ],
                    "type": "string",
                  },
                  "strLits": Object {
                    "enum": Array [
                      "foo",
                      "bar",
                    ],
                    "type": "string",
                  },
                },
                "required": Array [
                  "str",
                  "requiredBool",
                  "nullableNum",
                  "nullableObj",
                  "numLit",
                  "numLits",
                  "strLit",
                  "strLits",
                  "date",
                ],
                "type": "object",
              },
            },
          },
        },
        "responses": Object {
          "200": Object {
            "content": Object {
              "text/plain": Object {
                "schema": Object {
                  "type": "string",
                },
              },
            },
            "description": "Successful result",
          },
          "201": Object {
            "description": "A new resource was created",
          },
          "400": Object {
            "content": Object {
              "text/plain": Object {
                "schema": Object {
                  "type": "string",
                },
              },
            },
            "description": "Validation error",
          },
        },
        "tags": Array [
          "Tag1",
          "Tag2",
          "Tag3",
          "Tag4",
          "Tag5",
        ],
      },
    },
    "/request-headers": Object {
      "get": Object {
        "parameters": Array [
          Object {
            "in": "header",
            "name": "API-KEY",
            "required": true,
            "schema": Object {
              "type": "string",
            },
          },
          Object {
            "in": "header",
            "name": "X-Forwarded-For",
            "required": false,
            "schema": Object {
              "type": "string",
            },
          },
        ],
        "responses": Object {
          "200": Object {
            "content": Object {
              "text/plain": Object {
                "schema": Object {
                  "type": "string",
                },
              },
            },
            "description": "OK",
          },
          "400": Object {
            "content": Object {
              "text/plain": Object {
                "schema": Object {
                  "type": "string",
                },
              },
            },
            "description": "Bad Request",
          },
        },
      },
    },
    "/response-body-boolean": Object {
      "get": Object {
        "responses": Object {
          "200": Object {
            "content": Object {
              "text/plain": Object {
                "schema": Object {
                  "type": "boolean",
                },
              },
            },
            "description": "OK",
          },
        },
      },
    },
    "/response-body-buffer": Object {
      "get": Object {
        "responses": Object {
          "200": Object {
            "content": Object {
              "application/octet-stream": Object {
                "schema": Object {
                  "format": "binary",
                  "type": "string",
                },
              },
            },
            "description": "OK",
          },
        },
      },
    },
    "/response-body-number": Object {
      "get": Object {
        "responses": Object {
          "200": Object {
            "content": Object {
              "text/plain": Object {
                "schema": Object {
                  "type": "number",
                },
              },
            },
            "description": "OK",
          },
        },
      },
    },
    "/response-body-streaming": Object {
      "get": Object {
        "responses": Object {
          "200": Object {
            "content": Object {
              "application/octet-stream": Object {
                "schema": Object {
                  "format": "binary",
                  "type": "string",
                },
              },
            },
            "description": "OK",
          },
        },
      },
    },
    "/response-headers": Object {
      "get": Object {
        "responses": Object {
          "200": Object {
            "content": Object {
              "text/plain": Object {
                "schema": Object {
                  "type": "string",
                },
              },
            },
            "description": "OK",
            "headers": Object {
              "X-Bar": Object {
                "required": false,
                "schema": Object {
                  "type": "string",
                },
              },
              "X-Foo": Object {
                "required": true,
                "schema": Object {
                  "type": "string",
                },
              },
            },
          },
        },
      },
    },
    "/same-path-route": Object {
      "get": Object {
        "responses": Object {
          "200": Object {
            "content": Object {
              "application/json": Object {
                "schema": Object {
                  "properties": Object {
                    "foo": Object {
                      "type": "string",
                    },
                  },
                  "required": Array [
                    "foo",
                  ],
                  "type": "object",
                },
              },
            },
            "description": "OK",
          },
        },
      },
      "post": Object {
        "responses": Object {
          "200": Object {
            "content": Object {
              "application/json": Object {
                "schema": Object {
                  "properties": Object {
                    "bar": Object {
                      "type": "number",
                    },
                  },
                  "required": Array [
                    "bar",
                  ],
                  "type": "object",
                },
              },
            },
            "description": "OK",
          },
        },
      },
    },
    "/schema-docstrings": Object {
      "get": Object {
        "parameters": Array [
          Object {
            "description": "Foo bar baz",
            "in": "query",
            "name": "param",
            "required": true,
            "schema": Object {
              "type": "string",
            },
          },
        ],
        "requestBody": Object {
          "content": Object {
            "application/json": Object {
              "schema": Object {
                "properties": Object {
                  "inputField": Object {
                    "description": "Input field description",
                    "type": "number",
                  },
                },
                "required": Array [
                  "inputField",
                ],
                "type": "object",
              },
            },
          },
        },
        "responses": Object {
          "200": Object {
            "content": Object {
              "application/json": Object {
                "schema": Object {
                  "$ref": "#/components/schemas/DocumentedInterface",
                },
              },
            },
            "description": "OK",
          },
          "400": Object {
            "content": Object {
              "text/plain": Object {
                "schema": Object {
                  "type": "string",
                },
              },
            },
            "description": "Bad Request",
          },
        },
      },
    },
    "/type-alias": Object {
      "get": Object {
        "responses": Object {
          "200": Object {
            "content": Object {
              "text/plain": Object {
                "schema": Object {
                  "type": "string",
                },
              },
            },
            "description": "OK",
          },
          "400": Object {
            "content": Object {
              "text/plain": Object {
                "schema": Object {
                  "type": "string",
                },
              },
            },
            "description": "Bad Request",
          },
        },
      },
    },
    "/unused-request": Object {
      "get": Object {
        "responses": Object {
          "200": Object {
            "content": Object {
              "text/plain": Object {
                "schema": Object {
                  "type": "string",
                },
              },
            },
            "description": "OK",
          },
        },
      },
    },
    "/user/{id}/{other}": Object {
      "get": Object {
        "parameters": Array [
          Object {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": Object {
              "type": "string",
            },
          },
          Object {
            "in": "path",
            "name": "other",
            "required": true,
            "schema": Object {
              "type": "string",
            },
          },
        ],
        "responses": Object {
          "200": Object {
            "content": Object {
              "application/json": Object {
                "schema": Object {
                  "properties": Object {
                    "id": Object {
                      "type": "number",
                    },
                    "other": Object {
                      "type": "string",
                    },
                  },
                  "required": Array [
                    "id",
                    "other",
                  ],
                  "type": "object",
                },
              },
            },
            "description": "OK",
          },
        },
      },
    },
    "/uses-custom-route": Object {
      "get": Object {
        "responses": Object {
          "200": Object {
            "content": Object {
              "text/plain": Object {
                "schema": Object {
                  "type": "string",
                },
              },
            },
            "description": "OK",
          },
        },
      },
    },
    "/with-content-type-middleware": Object {
      "post": Object {
        "requestBody": Object {
          "content": Object {
            "application/x-www-form-urlencoded": Object {
              "schema": Object {
                "properties": Object {
                  "a": Object {
                    "type": "string",
                  },
                },
                "required": Array [
                  "a",
                ],
                "type": "object",
              },
            },
          },
        },
        "responses": Object {
          "200": Object {
            "content": Object {
              "text/plain": Object {
                "schema": Object {
                  "type": "string",
                },
              },
            },
            "description": "OK",
          },
          "400": Object {
            "content": Object {
              "text/plain": Object {
                "schema": Object {
                  "type": "string",
                },
              },
            },
            "description": "Bad Request",
          },
        },
      },
    },
  },
}
`;
